<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Anisave</title>
    <link href="/css" rel="stylesheet">
</head>
<body>
    <nav>
        <img src="logo.png" alt="Anisave Logo"> Anisave
    </nav>

    <div id="alert">
        <br>
        <h2>Alert</h2>
        <p>dqdqdwdqfqw<br>fqwf<br>wqf<br>qwfwfqfqfqwf</p>
        <button>â›Œ</button>
        <br>
    </div>

    <div id="comment">
        <textarea id="query"></textarea>
        <div id="dropdown">
            <button id="starselect">Rate</button>
            <div id="stardropdown"></div>
        </div>
        <br>
        <button id="send">Submit</button>
    </div>

    <div id="load">
    </div>

    <script>
        const doc = document
        const stardropdown = doc.getElementById("stardropdown")
        const loaddata = doc.getElementById("load")

        // Render rating
        for (let star = 1; star <= 5; star++) {
            const buttonstar = doc.createElement("button")
            buttonstar.textContent = `${star} â˜…`
            buttonstar.id = `${star}star`
            stardropdown.appendChild(buttonstar)
            const br = doc.createElement("br")
            stardropdown.appendChild(br)
        }

        // API
        const dburl = "/db"

        function updatedb() {
            const xhr = new XMLHttpRequest()
            xhr.open("GET", dburl, true)
            xhr.onreadystatechange = function() {
                if (xhr.readyState === 4 && xhr.status === 200) {
                    displayData(xhr.responseText)
                }
            }
            xhr.setRequestHeader("Content-Type", "text/html")
            xhr.send()
        }

        // Render data
        function displayData(data) {
            loaddata.textContent = ''
            const updatesplit = data.split("\n")
            updatesplit.forEach((item, item_num) => {
                if (item != ""){
                    const commentDiv = doc.createElement('div')
                    const contentP = doc.createElement('p')
                    const starSpan = doc.createElement('span')
                    const deleteButton = doc.createElement('button')
                    const starsplit = item.split(' | star: ')
                    contentP.textContent = starsplit[0]
                    starSpan.textContent = ` (${starsplit[1]}) ${"â˜…".repeat(Number(starsplit[1]))}`
                    deleteButton.textContent = 'ðŸ—‘'
                    deleteButton.id = 'delete'
                    commentDiv.id = "datanum" + item_num
                    commentDiv.data = item
                    commentDiv.classList.add('dataonload')
                    commentDiv.appendChild(contentP)
                    commentDiv.appendChild(starSpan)
                    commentDiv.appendChild(doc.createElement('br'))
                    commentDiv.appendChild(doc.createElement('br'))
                    commentDiv.appendChild(deleteButton)
                    loaddata.appendChild(commentDiv)
                }
            })
        }

        // Fetch and render data
        updatedb()

        function savedb() {

        }
    </script>
</body>
</html>
